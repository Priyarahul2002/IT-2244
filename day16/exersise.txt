#include<stdio.h>
#include<unistd.h>
int main()
{
	printf("\nHello world");
	int f = fork();
	int p = getpid();
	printf("\n the pid is %d",p);
	
	printf("\n the pid is %d", f);
	return 0;

}

[2021ict113@fedora ~]$ vi pid.c
[2021ict113@fedora ~]$ gcc pid.c -o pid
[2021ict113@fedora ~]$ ./pid

Hello world
 the pid is 12145
 the pid is 12146Hello world
 the pid is 12146
 the pid is 0
 
 ----------------------------------------------------------------------------------------------------
#include<stdio.h>
#include<unistd.h>
int main()
{
	printf("\nHello world\n");
	fork();
	
	return 0;

}
[2021ict113@fedora ~]$ vi pid2.c
[2021ict113@fedora ~]$ gcc pid2.c -o pid2
[2021ict113@fedora ~]$ ./pid2

Hello world

 
 ----------------------------------------------------------------------------------------------------
#include<stdio.h>
#include<unistd.h>
int main()
{
	fork();
	printf("\nHello world\n");
	
	
	return 0;

}
 
 
 [2021ict113@fedora ~]$ vi pid2.c
[2021ict113@fedora ~]$ gcc pid2.c -o pid2
[2021ict113@fedora ~]$ ./pid2

Hello world

Hello world

 ----------------------------------------------------------------------------------------------------
 
#include<stdio.h>
#include<unistd.h>
int main()
{
	fork();
	fork();
	printf("\nHello world\n");
	
	
	return 0;

}

[2021ict113@fedora ~]$ vi pid2.c
[2021ict113@fedora ~]$ gcc pid2.c -o pid2
[2021ict113@fedora ~]$ ./pid2

Hello world

Hello world


Hello world
Hello world

 
 ----------------------------------------------------------------------------------------------------
#include<stdio.h>
#include<unistd.h>
int main()
{
	
	int f = fork();
	
	if(f==0){
	printf("\n I am Child \n");
	}
	else{
	
	printf("\nI am parent\n");
	}
	return 0;

}

[2021ict113@fedora ~]$ vi day15p1.c
[2021ict113@fedora ~]$ gcc day15p1.c -o day15p1
[2021ict113@fedora ~]$ ./day15p1

I am parent

I am child

 ----------------------------------------------------------------------------------------------------
 #include<stdio.h>
#include<unistd.h>
int main()
{
	
	int f = fork();
	
	if(f==0){
	printf("\n I am Child \n");
	}
	else{
	
	printf("\nI am parent\n");
	}
	
	printf("\nHello\\n");
	return 0;

}

[2021ict113@fedora ~]$ vi day15p1.c
[2021ict113@fedora ~]$ gcc day15p1.c -o day15p1
[2021ict113@fedora ~]$ ./day15p1

I am parent

Hello

I am child

Hello

 ----------------------------------------------------------------------------------------------------
 
 child process should print 
 am child
 parent process should print
 am parent
 
 print once not multiple times
 
 
 
#include<stdio.h>
#include<unistd.h>

int main() {
    int f = fork();  

    if (f == 0) {
        
        printf("\nI am child\n");
    } else if (f > 0) {
       
        printf("\nI am parent\n");
    } else {
        
        printf("\nFork failed\n");
    }

    return 0;
}


[2021ict113@fedora ~]$ gcc day15p1.c -o day15p1
[2021ict113@fedora ~]$ ./day15p1

I am parent

I am child

----------------------------------------------------------------------------------------------------
        A
	  /  \
	 /    \
	/      \
   B        C
   
#include<stdio.h>
#include<unistd.h>

int main() {
    int f = fork();  

    if (f == 0) {
        printf("\nI am Child B\n");
    } else {
        int f1 = fork();  
        if (f1 == 0) {
            printf("\nI am a Sibling C\n");
        } else {
            printf("\nI am Parent A\n");
        }
    }

    return 0;
}


[2021ict113@fedora ~]$ vi day15p2.c
[2021ict113@fedora ~]$ gcc day15p2.c -o day15p2
[2021ict113@fedora ~]$ ./day15p2

I am Parent A

I am Child B

I am a Sibling C


----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
#include<stdio.h>
#include<unistd.h>
int main()
{
	int p = getpid();
	int f = fork();
	
	if(f==0)
	{
		printf("\nI am Parent A\n");
	}
	else{
		fork();
		if(f==0)
		{
			printf("\nI am Child B\n");
		}
		else{
			printf("\nI am a Sibling C\n");
		}
	}
}
----------------------------------------------------------------------------------------------------
p3

#include<stdio.h>
#include<unistd.h>

int main() {
    printf("I am parent (A), PID: %d\n", getpid());

    int b = fork(); 

    if (b == 0) {
       
        printf("I am child B, PID: %d, Parent PID: %d\n", getpid(), getppid());
    } else {
        int c = fork(); 
        if (c == 0) {
           
            printf("I am child C, PID: %d, Parent PID: %d\n", getpid(), getppid());
        }
    }

    return 0;
}

[2021ict113@fedora ~]$ vi day15p3.c
[2021ict113@fedora ~]$ gcc day15p3.c -o day15p3
[2021ict113@fedora ~]$ ./day15p3
I am parent (A), PID: 23059
I am child B, PID: 23060, Parent PID: 23059
I am child C, PID: 23061, Parent PID: 23059 